name: Build CI

on:
#   schedule:
#     - cron: "27,47 * * * *"
  push:
    branches-ignore: [test]
    paths:
      - "**/helper.json"

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Cache Check
        uses: actions/cache@v2
        env:
          cache-name: Aquacache-AutoBot
        with:
          path: ~/.aquabellus/AutoBot
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('src/aquabot.py') }}

      - name: Generate Server List
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "server.json"
          json: ${{ secrets.SERVER }}
          dir: "helper/"

      - name: Generate Rollbar Token
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "rollbar.json"
          json: ${{ secrets.ROLLBAR }}
          dir: "helper/"

      - name: Generate Voodoo Account
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "tumbal.json"
          json: ${{ secrets.TUMBAL }}
          dir: "helper/"

      - name: Generate Target Acount
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "target.json"
          json: ${{ secrets.TARGET }}
          dir: "helper/"

      - name: Setup Chromedriver
        uses: nanasess/setup-chromedriver@v1.0.1

      - name: Install Brave Browser
        run: |
          sudo apt install apt-transport-https curl gnupg
          curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -
          echo "deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list
          sudo apt update
          sudo apt install brave-browser
          brave-browser --version
          chromedriver --version

      - name: Setup Python 3
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check Files
        run: |
          cd helper/
          ls

      - name: Execute Script
        timeout-minutes: 30
        run: |
          coverage run src/aquabot.py
          coverage xml -o report/aquabot-report.xml

      - name: Send Log Report
        if: always()
        run: |
          python3 src/aquanotif.py

      - name: Generate and Upload Report
        if: always()
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY }}
        run: |
          mkdir -p report/
          bash <(curl -s https://codecov.io/bash)
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report \
            -l python -r report/aquabot-report.xml
